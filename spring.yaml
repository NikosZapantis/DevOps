--- #?file will be moved to playbook directory when optimising
- hosts: all

  vars: #? will be moved to group_vars/azure-hosts.yaml when optimising
      appdir: "/home/{{ ansible_user }}/backend/DS_crowdfunding"
      branch: "main"
      app:
        env:
          SPRING_DATASOURCE_USERNAME: devopsuser
          SPRING_DATASOURCE_PASSWORD: RGomWH4BLdSb6rwGPrsiuPwaNJkEFELZ
          SPRING_DATASOURCE_URL: "jdbc:postgresql://dpg-d0oa61juibrs73a8nne0-a.oregon-postgres.render.com:5432/devopsdb_n794"
          
  pre_tasks:
    - name: Install Java
      apt:
          name: openjdk-21-jdk
          state: present
          update_cache: yes
      become: yes

  tasks:
      - name: "debug appdir" #? may be removed later - no use?
        ansible.builtin.debug:
          msg: "appdir {{ansible_user_dir}}"


      - name: Remove backend directory if exists
        file:
          path: /home/{{ ansible_user }}/backend
          state: absent
        become: true

      - name: "Clone the Spring repository"
        git:
            repo: "https://github.com/NikosZapantis/DS_crowdfunding.git"
            dest: "{{ appdir }}"
            version: "{{ branch }}"
            force: yes

      - name: "Populate application.properties" #? will need to be optimised at some point
        copy:
          dest: "{{ appdir }}/crowdfunding/src/main/resources/application.properties"
          content: |
            spring.application.name=gotham_2wzk
            server.port=8081

            spring.datasource.username=devopsuser
            spring.datasource.password=RGomWH4BLdSb6rwGPrsiuPwaNJkEFELZ
            spring.datasource.url=jdbc:postgresql://dpg-d0oa61juibrs73a8nne0-a.oregon-postgres.render.com:5432/devopsdb_n794

            spring.datasource.driver-class-name=org.postgresql.Driver
            spring.jpa.generate-ddl=true
            spring.jpa.hibernate.ddl-auto=update

            spring.jpa.show-sql=true
            spring.jpa.properties.hibernate.format_sql=true

            spring.security.user.name=user
            spring.security.user.password=user

            app.jwtSecret='ZdHhly8tFaRdsn4pYJSGTSWU678of9GEQhWrTNnzgAXb3vVqdHHUs5QJoWyi87'
            app.jwtExpirationMs=86400000

      - name: Set execute permission for mvnw
        file:
          path: "{{ appdir }}/crowdfunding/mvnw"
          mode: '0755'
        become: true
      
      - name: "Build spring project"
        block:

        - name: "Build the Spring application"
          command: "./mvnw package -Dmaven.test.skip "
          args:
              chdir: "{{ appdir }}/crowdfunding"

  #      - name: "Run the Spring application"
  #        command: "java -jar target/springbootdemo-0.0.1-SNAPSHOT.jar"
  #        args:
  #            chdir: "{{ appdir }}"

        rescue:

        - name: Fetch the SHA-512 checksum for Maven 3.9.9
          get_url:
            url: https://downloads.apache.org/maven/maven-3/3.9.9/binaries/apache-maven-3.9.9-bin.zip.sha512
            dest: /tmp/maven_sha512.txt
            validate_certs: yes
            force: yes

        - name: Read the SHA-512 checksum from the file
          command: cat /tmp/maven_sha512.txt
          register: sha512_checksum

        - name: Replace the distributionSha512Sum line in maven-wrapper.properties
          replace:
            path: "{{ appdir }}/crowdfunding/.mvn/wrapper/maven-wrapper.properties"
            regexp: '^distributionSha'
            replace: "distributionSha512Sum={{ sha512_checksum.stdout }}"
        
        - name: Clean up the temporary file
          file:
            path: /tmp/maven_sha512.txt
            state: absent
          when: sha512_checksum is defined
        
        always:
          - name: "Build the Spring application"
            command: "./mvnw package -Dmaven.test.skip "
            args:
                chdir: "{{ appdir }}/crowdfunding"


      - name: copy spring service file
        template:
          src: ./files/spring.service.j2
          dest: "/etc/systemd/system/spring.service"
        become: yes
        become_user: root
        notify: restart spring

      - name: reload spring service
        service:
          name: spring
          state: restarted
        become: yes

      - name: ensure spring service started
        service:
          name: spring
          state: started
          enabled: yes
        become: yes

      # - name: "APT - install nginx"
      #   apt:
      #     name: nginx
      #     update_cache: yes
      #   become: yes

      # - name: copy nginx conf file
      #   template:
      #     src: ./reverseproxy/nginx.http.j2
      #     dest: "/etc/nginx/sites-available/spring"
      #   become: yes

      # - name: enable spring site in nginx
      #   file:
      #     src: "/etc/nginx/sites-available/spring"
      #     dest: "/etc/nginx/sites-enabled/spring"
      #     state: link
      #   become: yes
      #   notify: restart nginx

      # - name: de-activate default nginx site
      #   file:
      #     path: /etc/nginx/sites-enabled/default
      #     state: absent
      #   become: yes
      #   notify: restart nginx

  handlers:
  - name: restart spring
    service:
      name: spring
      state: restarted
    become: yes

  - name: restart nginx
    service:
      name: nginx
      state: restarted
    become: yes
