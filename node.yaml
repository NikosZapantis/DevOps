---
- name: Deploy Node.js Application
  hosts: all
  become: true

  vars: #? will be moved to group_vars/azure-hosts.yaml when optimising
    frontend_dir: /home/{{ ansible_user }}/frontend

  tasks:
    - name: Update apt cache and install curl
      apt:
        name: curl
        state: present
        update_cache: yes

    - name: Add NodeSource repository for Node.js 18.x
      shell: curl -sL https://deb.nodesource.com/setup_18.x | bash -
      args:
        executable: /bin/bash

    - name: Install Node.js (includes npm)
      apt:
        name: nodejs
        state: present
        update_cache: yes

    - name: Verify Node.js version
      command: node -v

    - name: Verify npm version
      command: npm -v

    - name: Copy frontend files
      copy:
        src: "{{ playbook_dir }}/../App/frontend/"
        dest: "{{ frontend_dir }}/"
        mode: '0755'
        owner: azureuser
        group: azureuser
    
    - name: Allow others to execute /home/azureuser so nginx can access frontend
      file:
        path: /home/azureuser
        mode: '0751'
        state: directory

    - name: Install npm dependencies
      command: npm install
      args:
        chdir: "{{ frontend_dir }}"

    - name: Run serverInit.js with PM2
      shell: |
        npm install -g pm2
        pm2 delete all || true
        pm2 start serverInit.js --name frontend-server
        pm2 save
      args:
        chdir: "{{ frontend_dir }}"

    - name: Install NGINX
      apt:
        name: nginx
        state: present
        update_cache: yes

    - name: Copy NGINX config for Node.js app
      template:
        src: ./reverseproxy/nginx.node.j2
        dest: /etc/nginx/sites-available/spring
      become: yes

    - name: Enable Node.js site in NGINX
      file:
        src: /etc/nginx/sites-available/spring
        dest: /etc/nginx/sites-enabled/spring
        state: link
      become: yes
      notify: restart nginx

    - name: Disable default NGINX site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      notify: restart nginx

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted
