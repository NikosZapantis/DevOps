---
- hosts: all
  become: true

  tasks:
    
    - name: Disable default NGINX site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      notify: restart nginx
      
    - name: Install required packages
      apt:
        name:
          - software-properties-common
          - curl
          - apt-transport-https
          - ca-certificates
        state: present
        update_cache: true
      
    - name: Manually Add docker GPG key
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
      args:
        creates: /usr/share/keyrings/docker-archive-keyring.gpg

    - name: Add docker repository
      apt_repository:
        repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu focal stable"
        state: present
        filename: docker
        update_cache: yes

    - name: Install Docker CE and Compose plugin
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present

    - name: Ensure Docker service is running
      service:
        name: docker
        state: started
        enabled: true

    - name: Add existing user to group docker
      user:
        name: "{{  docker_user }}"
        groups: docker
        append: yes

    - name: Create deployment directory
      file:
        path: "{{ docker_project_path }}"
        state: directory
        owner: "{{ docker_user }}"
        group: docker
        mode: '0755'

    - name: Synchronize entire docker project directory
      synchronize:
        src: "{{ playbook_dir }}/../.."
        dest: "{{ docker_project_path }}"
        recursive: yes
        delete: no
        rsync_opts:
          - "--chmod=Du=rwx,Dg=rx,Fu=rw,Fg=r,Fo=r"

    - name: Synchronize backend folder
      synchronize:
        src: "{{ playbook_dir }}/../../App/backend"
        dest: "{{ docker_project_path }}/App/backend"
        recursive: yes

    - name: Synchronize frontend folder
      synchronize:
        src: "{{ playbook_dir }}/../../App/frontend"
        dest: "{{ docker_project_path }}/App/frontend"
        recursive: yes

    - name: Stop existing containers
      command: docker compose down
      args:
        chdir: "{{ docker_project_path }}/docker"
      ignore_errors: true

    - name: Find process using port 8080
      shell: |
        lsof -ti :8080 || true
      register: port_8080_pid
      changed_when: false
      
    - name: Kill process using port 8080
      command: kill -9 {{ port_8080_pid.stdout }}
      when: port_8080_pid.stdout != ""
      ignore_errors: true

    - name: Kill any process on port 7000
      shell: |
        pid=$(lsof -t -i :7000) && kill -9 "$pid" || true
      ignore_errors: true

    - name: Kill all pm2 processes and clear saved state
      shell: |
        pm2 delete all || true
        pm2 kill || true
        pm2 unstartup || true
      ignore_errors: true

    - name: Find process using port 80
      shell: |
        lsof -ti :80 || true
      register: port_80_pid
      changed_when: false
      
    - name: Kill process using port 80
      command: kill -9 {{ port_80_pid.stdout }}
      when: port_80_pid.stdout != ""
      ignore_errors: true

    - name: Run docker compose 
      command: docker compose up -d
      args:
        chdir: "{{ docker_project_path }}/docker"
